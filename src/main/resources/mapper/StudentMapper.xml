<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//www.mybatis.org//DTD Mapper 3.0//EN"
        "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.corewell.study.dao.StudentDao">
    <resultMap id="StudentMap" type="com.corewell.study.domain.Student">
        <id property="id" column="id"/>
        <result property="account" column="account"/>
        <result property="password" column="password"/>
        <result property="name" column="name"/>
        <result property="school" column="school"/>
        <result property="major" column="major"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="role" column="role"/>
        <result property="projectId" column="project_id"/>
        <result property="groupId" column="group_id"/>
        <result property="teacherId" column="teacher_id"/>
        <result property="status" column="status"/>

    </resultMap>

    <select id="selectStudentByAccount" parameterType="String" resultType="AccountDo">
        select id, account, password, name
        from student
        where status = 1
          and account = #{account}
    </select>

    <select id="selectStudentById" parameterType="Long" resultType="StudentDTO">
        select s.role       as role,
               s.project_id as projectId,
               s.teacher_id as teacherId,
               s.group_id   as groupId,
               p.name       as projectName,
               g.name       as groupName
        from student s
                 left join project p on s.project_id = p.id
                 left join `group` g on s.group_id = g.id
        where s.status = 1
          and s.id = #{id}
    </select>

    <select id="findStudent" parameterType="StudentReq" resultType="Student">
        select id, account, password, name, school, major, phone, email,
        create_time as createTime, update_time as updateTime, role,
        project_id as projectId, group_id as groupId, teacher_id as teacherId, status
        from student
        where status!=3
        <if test="id!=null and id!=''">
            and id=#{id}
        </if>
        <if test="account!=null and account!=''">
            and account=#{account}
        </if>
        <if test="role!=null and role!=''">
            and role=#{role}
        </if>
        <if test="status!=null and status!=''">
            and status=#{status}
        </if>
        <if test="groupId!=null and groupId!=''">
            and group_id=#{groupId}
        </if>
        <if test="projectId!=null and projectId!=''">
            and project_id=#{projectId}
        </if>
        <if test="teacherId!=null and teacherId!=''">
            and teacher_id=#{teacherId}
        </if>
        order by create_time desc
    </select>

    <select id="findStudentByPage" parameterType="StudentParam" resultType="Student">
        select id, account, password, name, school, major, phone, email,
        create_time as createTime, update_time as updateTime, role,
        project_id as projectId, group_id as groupId, teacher_id as teacherId, status
        from student
        where status!=3
        <if test="status!=null and status!=''">
            and status=#{status}
        </if>
        <if test="teacherId!=null and teacherId!=''">
            and teacher_id=#{teacherId}
        </if>
        order by create_time desc
    </select>

    <select id="findStudentByGroupId" parameterType="Long" resultType="Student">
        select id,
               account,
               password,
               name,
               school,
               major,
               phone,
               email,
               create_time as createTime,
               update_time as updateTime,
               role,
               project_id  as projectId,
               group_id    as groupId,
               teacher_id  as teacherId,
               status
        from student
        where status = 1
          and group_id = #{groupId}
    </select>


    <insert id="insertStudent" parameterType="Student">
        insert into student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id!=null and id!=''">
                id,
            </if>
            <if test="account!=null and account!=''">
                account,
            </if>
            <if test="password!=null and password!=''">
                password,
            </if>
            <if test="name!=null and name!=''">
                name,
            </if>
            <if test="school!=null and school!=''">
                school,
            </if>
            <if test="major!=null and major!=''">
                major,
            </if>
            <if test="phone!=null and phone!=''">
                phone,
            </if>
            <if test="email!=null and email!=''">
                email,
            </if>
            <if test="createTime!=null">
                create_time,
            </if>
            <if test="updateTime!=null">
                update_time,
            </if>
            <if test="role!=null and role!=''">
                role,
            </if>
            <if test="projectId!=null and projectId!=''">
                project_id,
            </if>
            <if test="groupId!=null and groupId!=''">
                group_id,
            </if>
            <if test="teacherId!=null and teacherId!=''">
                teacher_id,
            </if>
            <if test="status!=null and status!=''">
                status
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id!=null and id!=''">
                #{id},
            </if>
            <if test="account!=null and account!=''">
                #{account},
            </if>
            <if test="password!=null and password!=''">
                #{password},
            </if>
            <if test="name!=null and name!=''">
                #{name},
            </if>
            <if test="school!=null and school!=''">
                #{school},
            </if>
            <if test="major!=null and major!=''">
                #{major},
            </if>
            <if test="phone!=null and phone!=''">
                #{phone},
            </if>
            <if test="email!=null and email!=''">
                #{email},
            </if>
            <if test="createTime!=null">
                #{createTime},
            </if>
            <if test="updateTime!=null">
                #{updateTime},
            </if>
            <if test="role!=null and role!=''">
                #{role},
            </if>
            <if test="projectId!=null and projectId!=''">
                #{projectId},
            </if>
            <if test="groupId!=null and groupId!=''">
                #{groupId},
            </if>
            <if test="teacherId!=null and teacherId!=''">
                #{teacherId},
            </if>
            <if test="status!=null and status!=''">
                #{status}
            </if>
        </trim>
    </insert>


    <update id="updateStudent" parameterType="Student">
        update student
        <set>
            <if test="account!=null and account!=''">
                account = #{account},
            </if>
            <if test="password!=null and password!=''">
                password =#{password},
            </if>
            <if test="name!=null and name!=''">
                name = #{name},
            </if>
            <if test="school!=null and school!=''">
                school =#{school},
            </if>
            <if test="major!=null and major!=''">
                major =#{major},
            </if>

            <if test="phone!=null and phone!=''">
                phone =#{phone},
            </if>
            <if test="email!=null and email!=''">
                email =#{email},
            </if>
            <if test="createTime!=null">
                create_time =#{createTime},
            </if>
            <if test="updateTime!=null">
                update_time =#{updateTime},
            </if>
            <if test="role!=null and role!=''">
                role =#{role},
            </if>
            <if test="projectId!=null and projectId!=''">
                project_id=#{projectId},
            </if>
            <if test="groupId!=null and groupId!=''">
                group_id=#{groupId},
            </if>
            <if test="teacherId!=null and teacherId!=''">
                teacher_id =#{teacherId},
            </if>
            <if test="status!=null and status!=''">
                status =#{status}
            </if>
        </set>
        where id=#{id}
    </update>

    <update id="updateStudentStatus" parameterType="StudentStatusReq">
        update student
        set status=#{status},
            update_time=now()
        where id = #{id}
    </update>
    <update id="updateStudentStatusById" parameterType="Long">
        update student
        set status=1,
            update_time=now()
        where id = #{id}
    </update>


    <delete id="updateStudentStatusByIds" parameterType="Long">
        update student
        set status=1,
        update_time=now() where id in
        <foreach collection="list" item="id" separator=",">
            #{id}
        </foreach>
    </delete>

    <update id="updateGroupStudent" parameterType="Long">
        update student
        set group_id=0,
            project_id=0,
            role=0,
            update_time=now()
        where id = #{id}
    </update>
    <update id="updateGroupStudentByGroupId" parameterType="Long">
        update student
        set group_id=0,
            project_id=0,
            role=0,
            update_time=now()
        where group_id = #{groupId}
    </update>
    <update id="updateProjectStudentByProjectId" parameterType="Long">
        update student
        set group_id=0,
            project_id=0,
            role=0,
            update_time=now()
        where project_id = #{projectId}
    </update>

    <update id="updateProjectStatusByTeacherId" parameterType="Long">
        update student
        set group_id=0,
            project_id=0,
            role=0,
            update_time=now()
        where teacher_id = #{teacherId}
    </update>

    <select id="findStudentByAccount" parameterType="String" resultType="Student">
        select *
        from student
        where account = #{account}
    </select>

    <delete id="deleteStudent" parameterType="String">
        update student
        set status=3,
            group_id=0,
            project_id=0,
            role=0,
            update_time=now()
        where account = #{account}
    </delete>
    <delete id="deleteStudentById" parameterType="Long">
        update student
        set status=3,
            group_id=0,
            project_id=0,
            role=0,
            update_time=now()
        where id = #{id}
    </delete>

</mapper>

